name: lhci

on:
  pull_request:
    paths:
      - 'apps/web/**'
      - '.github/workflows/performance.yml'
  workflow_dispatch: {}

jobs:
  lhci:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    env:
      # Keep CI as lean as possible
      NEXT_TELEMETRY_DISABLED: '1'
      # Lighthouse target (can use any stable route in your app)
      APP_URL: 'http://localhost:3000/notifications?host=aHR0cHM6Ly9kZXYtbXlzaG9wLm15c2hvcGlmeS5jb20&shop=example-dev.myshopify.com'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Node + pnpm (versions match your repo)
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: 'pnpm'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: '9.12.3'
          run_install: false

      - name: Install dependencies (workspace root)
        run: pnpm install --frozen-lockfile

      # --- Build the app once
      - name: Build @jazm/web
        working-directory: apps/web
        env:
          # runtime assumptions your code expects during build
          SHOPIFY_APP_URL: 'http://localhost:3000'
          NEXT_PUBLIC_SHOPIFY_API_KEY: 'test_key' # replace if needed for build
        run: pnpm build

      # --- Start the server (bind to 127.0.0.1 and the port weâ€™ll probe)
      - name: Start Next server
        working-directory: apps/web
        env:
          NODE_ENV: production
          PORT: '3000'
          HOSTNAME: '127.0.0.1'
          # if your runtime expects these at start, wire them here too:
          SHOPIFY_APP_URL: 'http://localhost:3000'
          NEXT_PUBLIC_SHOPIFY_API_KEY: 'test_key'
        run: |
          nohup pnpm start -- -p 3000 -H 127.0.0.1 > /tmp/next.log 2>&1 &
          echo $! > /tmp/next.pid

      # --- Wait until the TCP port is listening (not HTTP 2xx)
      - name: Wait for port 3000
        run: npx --yes wait-on tcp:3000 --timeout 90000
        # http(s) resources require 2xx; tcp waits for the listening socket. See wait-on docs.

      # --- Run Lighthouse
      - name: Lighthouse CI (autorun)
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
        run: |
          npx --yes @lhci/cli@0.14.x autorun \
            --collect.url="$APP_URL" \
            --collect.numberOfRuns=1 \
            --upload.target=temporary-public-storage

      # --- Always print logs and stop the server
      - name: Print Next logs on failure
        if: failure()
        run: |
          echo "==== /tmp/next.log ===="
          [ -f /tmp/next.log ] && tail -n +1 /tmp/next.log || echo "No log file"

      - name: Stop server
        if: always()
        run: |
          if [ -f /tmp/next.pid ]; then
            kill $(cat /tmp/next.pid) || true
          fi
