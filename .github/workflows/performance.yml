# .github/workflows/performance.yml
name: lhci

on:
  pull_request:
  push:
    branches: [main]

jobs:
  lhci:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # pnpm from package.json "packageManager"
      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      # Prisma client for @jazm/db (custom output path)
      - name: Generate Prisma client (@jazm/db)
        run: pnpm -F @jazm/db run prisma:generate

      - name: Verify generated Prisma client
        run: test -d packages/db/src/generated/prisma

      # âœ… Provide Shopify envs during build to prevent "Invalid URL"
      - name: Build web
        env:
          SHOPIFY_API_KEY: ci_dummy_key
          SHOPIFY_API_SECRET: ci_dummy_secret
          SHOPIFY_SCOPES: read_products
          SHOPIFY_APP_URL: http://localhost:3000
          NODE_ENV: production
        run: pnpm -F @jazm/web build

      - name: Start web (background)
        env:
          NEXT_PUBLIC_SHOPIFY_API_KEY: ci_dummy_key
          SHOPIFY_API_KEY: ci_dummy_key
          SHOPIFY_API_SECRET: ci_dummy_secret
          SHOPIFY_SCOPES: read_products
          SHOPIFY_APP_URL: http://localhost:3000
          NODE_ENV: production
        run: pnpm -F @jazm/web start -- --port 3000 &

      - name: Wait for web
        run: npx --yes wait-on http://localhost:3000

      - name: Lighthouse CI
        uses: treosh/lighthouse-ci-action@v12
        with:
          urls: |
            http://localhost:3000/
          uploadArtifacts: true
          temporaryPublicStorage: true
