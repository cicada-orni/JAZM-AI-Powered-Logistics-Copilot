name: lhci
on:
  pull_request:

jobs:
  lhci:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node 22 + pnpm
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'
      - name: Enable corepack & pin pnpm
        run: |
          corepack enable
          corepack prepare pnpm@9.12.3 --activate

      - name: Install deps (workspace)
        run: pnpm install --frozen-lockfile

      # Build the app with dummy env so server-only code parses safely
      - name: Build @jazm/web
        working-directory: apps/web
        env:
          NODE_ENV: production
          SHOPIFY_APP_URL: http://localhost:3000
          NEXT_PUBLIC_SHOPIFY_API_KEY: test_key
        run: pnpm build

      - name: Start Next.js (port 3000)
        working-directory: apps/web
        env:
          PORT: 3000
        run: |
          nohup pnpm start -- --port 3000 >/tmp/next.log 2>&1 & echo $! > /tmp/next.pid

      - name: Wait for server
        run: npx wait-on http://localhost:3000 --timeout 60000

      - name: Lighthouse CI (single run, hardened Chrome)
        uses: treosh/lighthouse-ci-action@v12
        timeout-minutes: 10
        with:
          configPath: apps/web/.lighthouserc.json
          uploadArtifacts: true
        env:
          # Optional if you want a dedicated PR “Lighthouse CI” check:
          # LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
          # (Install/authorize the Lighthouse CI GitHub App, then add the token) :contentReference[oaicite:5]{index=5}
          NODE_OPTIONS: --max_old_space_size=4096

      - name: Print Next logs on failure
        if: failure()
        run: |
          echo "---- NEXT LOGS ----"
          tail -n +1 /tmp/next.log || true

      - name: Stop Next
        if: always()
        run: |
          kill $(cat /tmp/next.pid) 2>/dev/null || true
